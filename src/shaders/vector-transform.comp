#version 450 core

layout(std140, binding = 0) uniform Scene {
    mat4 view;
    mat4 projection;
    vec3 cameraPosition;
};

struct Edge {
    vec3 start;
    vec3 control1;
    vec3 control2;
    vec3 end;
};

layout(std430, binding = 1) readonly buffer EdgesIn {
    Edge edgesIn[];
};

layout(std430, binding = 2) writeonly buffer EdgesOut {
    Edge edgesOut[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= edgesIn.length())
        return;

    mat4 viewProj = projection * view;

    Edge e = edgesIn[index];
    e.start    = (viewProj * vec4(e.start    - cameraPosition, 1.0)).xyz;
    e.control1 = (viewProj * vec4(e.control1 - cameraPosition, 1.0)).xyz;
    e.control2 = (viewProj * vec4(e.control2 - cameraPosition, 1.0)).xyz;
    e.end      = (viewProj * vec4(e.end      - cameraPosition, 1.0)).xyz;

    edgesOut[index] = e;
}
